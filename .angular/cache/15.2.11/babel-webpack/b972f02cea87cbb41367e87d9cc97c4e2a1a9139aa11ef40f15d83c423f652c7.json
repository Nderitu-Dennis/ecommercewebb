{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { UserstorageService } from '../services/auth/storage/userstorage.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth/auth.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/icon\";\nfunction LoginComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid E-mail address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid password \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder, authService, snackBar, router) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.snackBar = snackBar;\n    this.router = router;\n    this.hidePassword = true; // by default the password should be hidden\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: [null, [Validators.required]],\n      password: [null, [Validators.required]]\n    });\n  }\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n  onSubmit() {\n    const username = this.loginForm.get('email').value;\n    const password = this.loginForm.get('password').value;\n    this.authService.login(username, password).subscribe(res => {\n      if (UserstorageService.isAdminLoggedIn()) {\n        this.router.navigateByUrl('admin/dashboard');\n      } else if (UserstorageService.isCustomerLoggedIn()) {\n        this.router.navigateByUrl('customer/dashboard');\n      }\n    }, error => {\n      this.snackBar.open('Bad credentials', 'ERROR', {\n        duration: 5000\n      });\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 34,\n    vars: 6,\n    consts: [[1, \"container\"], [1, \"welcome-message\"], [3, \"formGroup\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"placeholder\", \"Email\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [\"mat-button\", \"\", \"color\", \"warn\", \"routerLink\", \"/signup\"], [2, \"color\", \"blue\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\")(3, \"span\");\n        i0.ɵɵtext(4, \"ShopSasa!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"p\");\n        i0.ɵɵtext(6, \"shop at the comfort \");\n        i0.ɵɵelement(7, \"p\");\n        i0.ɵɵtext(8, \"of your home\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"mat-card\")(10, \"mat-card-title\");\n        i0.ɵɵtext(11, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-card-content\")(13, \"form\", 2)(14, \"mat-form-field\", 3)(15, \"mat-label\");\n        i0.ɵɵtext(16, \"E-mail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 4);\n        i0.ɵɵtemplate(18, LoginComponent_mat_error_18_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-form-field\", 3)(20, \"mat-label\");\n        i0.ɵɵtext(21, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 6);\n        i0.ɵɵelementStart(23, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_23_listener() {\n          return ctx.togglePasswordVisibility();\n        });\n        i0.ɵɵelementStart(24, \"mat-icon\");\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(26, LoginComponent_mat_error_26_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_27_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(28, \"Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(29, \"mat-card-actions\")(30, \"button\", 9);\n        i0.ɵɵtext(31, \"Don't have an account? \");\n        i0.ɵɵelementStart(32, \"span\", 10);\n        i0.ɵɵtext(33, \" Sign up here!\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"email\").invalid && ctx.loginForm.get(\"email\").touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"type\", ctx.hidePassword ? \"password\" : \"text\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", ctx.hidePassword ? \"visibility_off\" : \"visibility\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"password\").invalid && ctx.loginForm.get(\"password\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    dependencies: [i5.NgIf, i4.RouterLink, i6.MatButton, i6.MatIconButton, i7.MatCard, i7.MatCardActions, i7.MatCardContent, i7.MatCardTitle, i8.MatFormField, i8.MatLabel, i8.MatError, i8.MatSuffix, i9.MatInput, i10.MatIcon, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 85vh;\\n  background-color: wheat;\\n}\\n\\n.content-wrapper[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: space-between;\\n  align-items: center;\\n  width: 100%;\\n  max-width: 1200px; \\n}\\n\\n.welcome-message[_ngcontent-%COMP%] {\\n  font-family: \\\"Montserrat\\\", sans-serif;\\n  color: #333;\\n  text-align: left;\\n  padding: 20px;\\n  max-width: 500px;\\n  background-color: transparent;\\n  box-shadow: none;\\n  order: 1;\\n  flex-basis: calc(50% - 20px); \\n  margin-top: -190px;\\n}\\n\\n.welcome-message[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  font-size: 36px;\\n  font-weight: bold;\\n  margin-bottom: 10px;\\n}\\n\\n.welcome-message[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  color: #ff6600;\\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);\\n  transition: color 0.3s ease, text-shadow 0.3s ease;\\n}\\n\\n.welcome-message[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:hover {\\n  color: #cc4400; \\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4); \\n  cursor: pointer;\\n}\\n\\nmat-card[_ngcontent-%COMP%] {\\n  max-width: 500px;\\n  width: 100%;\\n  padding: 10px;\\n  order: 2;\\n}\\n@media screen and (max-width: 500px) {\\n  mat-card[_ngcontent-%COMP%] {\\n    max-width: 90%;\\n  }\\n}\\n\\nmat-card-title[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 24px;\\n  margin-bottom: 20px;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\nmat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-bottom: 20px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n@media screen and (max-width: 500px) {\\n  mat-card-title[_ngcontent-%COMP%] {\\n    font-size: 20px;\\n  }\\n  mat-form-field[_ngcontent-%COMP%] {\\n    margin-bottom: 10px;\\n  }\\n}\\n@media screen and (max-width: 768px) {\\n  .content-wrapper[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n  .welcome-message[_ngcontent-%COMP%], mat-card[_ngcontent-%COMP%] {\\n    flex-basis: 100%;\\n    max-width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7RUFDQSx1QkFBQTtBQUNKOztBQUtFO0VBQ0UsYUFBQTtFQUNBLGVBQUE7RUFDQSw4QkFBQTtFQUNBLG1CQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBLEVBQUEsZ0NBQUE7QUFGSjs7QUFLRTtFQUNFLHFDQUFBO0VBQ0EsV0FBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLGdCQUFBO0VBQ0EsNkJBQUE7RUFDQSxnQkFBQTtFQUNBLFFBQUE7RUFDQSw0QkFBQSxFQUFBLHdDQUFBO0VBQ0Esa0JBQUE7QUFGSjs7QUFLRTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtFQUNBLG1CQUFBO0FBRko7O0FBS0U7RUFDRSxjQUFBO0VBQ0EsMkNBQUE7RUFDQSxrREFBQTtBQUZKOztBQUtFO0VBQ0UsY0FBQSxFQUFBLGlCQUFBO0VBQ0EsMkNBQUEsRUFBQSwyQkFBQTtFQUNBLGVBQUE7QUFGSjs7QUFLRTtFQUNFLGdCQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7RUFDQSxRQUFBO0FBRko7QUFJSTtFQU5GO0lBT0UsY0FBQTtFQURGO0FBQ0Y7O0FBS0k7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtBQUZKOztBQU1JO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7QUFISjs7QUFNSTtFQUNBLFdBQUE7RUFDQSxtQkFBQTtBQUhKOztBQU1JO0VBQ0EsV0FBQTtBQUhKOztBQU1JO0VBRUE7SUFDQSxlQUFBO0VBSkY7RUFRRTtJQUNBLG1CQUFBO0VBTkY7QUFDRjtBQVVFO0VBQ0U7SUFDRSxzQkFBQTtJQUNBLG1CQUFBO0VBUko7RUFXRTs7SUFFRSxnQkFBQTtJQUNBLGVBQUE7RUFUSjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGhlaWdodDogODV2aDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGVhdDtcbiAgICBcbiAgICBcbiAgICBcbiAgfVxuICBcbiAgLmNvbnRlbnQtd3JhcHBlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7IC8qIEFkanVzdCB0aGlzIHZhbHVlIGFzIG5lZWRlZCAqL1xuICB9XG4gIFxuICAud2VsY29tZS1tZXNzYWdlIHtcbiAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xuICAgIGNvbG9yOiAjMzMzO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgb3JkZXI6IDE7XG4gICAgZmxleC1iYXNpczogY2FsYyg1MCUgLSAyMHB4KTsgLyogQWRqdXN0IHRoZSBzcGFjaW5nIGJldHdlZW4gZWxlbWVudHMgKi9cbiAgICBtYXJnaW4tdG9wOiAtMTkwcHg7XG4gIH1cbiAgXG4gIC53ZWxjb21lLW1lc3NhZ2UgaDEge1xuICAgIGZvbnQtc2l6ZTogMzZweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB9XG4gIFxuICAud2VsY29tZS1tZXNzYWdlIGgxIHNwYW4ge1xuICAgIGNvbG9yOiAjZmY2NjAwO1xuICAgIHRleHQtc2hhZG93OiAxcHggMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlLCB0ZXh0LXNoYWRvdyAwLjNzIGVhc2U7XG4gIH1cblxuICAud2VsY29tZS1tZXNzYWdlIGgxIHNwYW46aG92ZXIge1xuICAgIGNvbG9yOiAjY2M0NDAwOyAvKiBEYXJrZXIgY29sb3IgKi9cbiAgICB0ZXh0LXNoYWRvdzogMnB4IDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjQpOyAvKiBNb3JlIHByb25vdW5jZWQgc2hhZG93ICovXG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gIFxuICBtYXQtY2FyZHtcbiAgICBtYXgtd2lkdGg6IDUwMHB4OyAgICBcbiAgICB3aWR0aDogMTAwJTsgICAgXG4gICAgcGFkZGluZzoxMHB4OyAgICBcbiAgICBvcmRlcjogMjtcbiAgICBcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjUwMHB4KXsgICAgXG4gICAgbWF4LXdpZHRoOiA5MCU7XG4gICAgXG4gICAgfSAgICBcbiAgICB9XG4gICAgXG4gICAgbWF0LWNhcmQtdGl0bGUgeyAgICBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7ICAgIFxuICAgIGZvbnQtc2l6ZTogMjRweDsgICAgXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICBcbiAgICB9XG4gICAgXG4gICAgZm9ybXsgICAgXG4gICAgZGlzcGxheTogZmxleDsgICAgXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgICAgXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgICAgXG4gICAgfVxuICAgIFxuICAgIG1hdC1mb3JtLWZpZWxkeyAgICBcbiAgICB3aWR0aDoxMDAlOyAgICBcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4OyAgICBcbiAgICB9XG4gICAgXG4gICAgYnV0dG9ueyAgICBcbiAgICB3aWR0aDogMTAwJTsgICAgXG4gICAgfVxuICAgIFxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NTAwcHgpe1xuICAgIFxuICAgIG1hdC1jYXJkLXRpdGxleyAgICBcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgXG4gICAgfVxuICAgIFxuICAgIG1hdC1mb3JtLWZpZWxkeyAgICBcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIFxuICAgIH1cbiAgICBcbiAgICB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNvbnRlbnQtd3JhcHBlciB7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG4gIFxuICAgIC53ZWxjb21lLW1lc3NhZ2UsXG4gICAgbWF0LWNhcmQge1xuICAgICAgZmxleC1iYXNpczogMTAwJTtcbiAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICB9XG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;AAInE,SAASC,kBAAkB,QAAQ,8CAA8C;;;;;;;;;;;;;;ICO7DC,iCAAoF;IAChFA,qDACJ;IAAAA,iBAAY;;;;;IAYZA,iCAA0F;IACtFA,+CACJ;IAAAA,iBAAY;;;ADhBhC,OAAM,MAAOC,cAAc;EAKzBC,YACUC,WAAwB,EACxBC,WAAwB,EACxBC,QAAqB,EACrBC,MAAc;IAHd,gBAAW,GAAXH,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,aAAQ,GAARC,QAAQ;IACR,WAAM,GAANC,MAAM;IANhB,iBAAY,GAAG,IAAI,CAAC,CAAC;EAOlB;;EAEHC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACtCC,KAAK,EAAE,CAAC,IAAI,EAAE,CAACZ,UAAU,CAACa,QAAQ,CAAC,CAAC;MACpCC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAACd,UAAU,CAACa,QAAQ,CAAC;KACvC,CAAC;EACJ;EAEAE,wBAAwB;IACtB,IAAI,CAACC,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEAC,QAAQ;IACN,MAAMC,QAAQ,GAAG,IAAI,CAACR,SAAS,CAACS,GAAG,CAAC,OAAO,CAAE,CAACC,KAAK;IACnD,MAAMN,QAAQ,GAAG,IAAI,CAACJ,SAAS,CAACS,GAAG,CAAC,UAAU,CAAE,CAACC,KAAK;IAEtD,IAAI,CAACd,WAAW,CAACe,KAAK,CAACH,QAAQ,EAAEJ,QAAQ,CAAC,CAACQ,SAAS,CACjDC,GAAG,IAAI;MACN,IAAItB,kBAAkB,CAACuB,eAAe,EAAE,EAAE;QACxC,IAAI,CAAChB,MAAM,CAACiB,aAAa,CAAC,iBAAiB,CAAC;OAC7C,MAAM,IAAIxB,kBAAkB,CAACyB,kBAAkB,EAAE,EAAE;QAClD,IAAI,CAAClB,MAAM,CAACiB,aAAa,CAAC,oBAAoB,CAAC;;IAEnD,CAAC,EACAE,KAAK,IAAI;MACR,IAAI,CAACpB,QAAQ,CAACqB,IAAI,CAAC,iBAAiB,EAAE,OAAO,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE,CAAC;IACpE,CAAC,CACF;EACH;EAAC;qBAvCU1B,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAA2B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCZ3BhC,8BAAuB;QAETA,yBAAS;QAAAA,iBAAO;QAACA,oBAAO;QAAAA,oCAAoB;QAAAA,oBAAO;QAAAA,4BAAY;QAAAA,iBAAK;QAE9EA,gCAAU;QACUA,sBAAK;QAAAA,iBAAiB;QACtCA,yCAAkB;QAIKA,uBAAM;QAAAA,iBAAY;QAC7BA,4BAAqE;QACrEA,6EAEY;QAChBA,iBAAiB;QAGjBA,0CAAqC;QACtBA,yBAAQ;QAAAA,iBAAY;QAC/BA,4BAA2H;QAE3HA,kCAAuE;QAArCA;UAAA,OAASiC,8BAA0B;QAAA,EAAC;QAClEjC,iCAAU;QAAAA,aAAoD;QAAAA,iBAAW;QAG7EA,6EAEY;QAChBA,iBAAiB;QAEjBA,kCACqB;QAArBA;UAAA,OAASiC,cAAU;QAAA,EAAC;QAACjC,sBAAK;QAAAA,iBAAS;QAK3CA,yCAAkB;QACuCA,wCAAwB;QAAAA,iCAA2B;QAACA,+BAAa;QAAAA,iBAAO;;;QA/BvHA,gBAAuB;QAAvBA,yCAAuB;QAKTA,eAAsE;QAAtEA,+FAAsE;QAQjEA,eAA+C;QAA/CA,wEAA+C;QAGlDA,eAAoD;QAApDA,kFAAoD;QAGtDA,eAA4E;QAA5EA,qGAA4E;QAKpCA,eAA8B;QAA9BA,gDAA8B","names":["Validators","UserstorageService","i0","LoginComponent","constructor","formBuilder","authService","snackBar","router","ngOnInit","loginForm","group","email","required","password","togglePasswordVisibility","hidePassword","onSubmit","username","get","value","login","subscribe","res","isAdminLoggedIn","navigateByUrl","isCustomerLoggedIn","error","open","duration","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/denniskali/Desktop/ecommercewebb/src/app/login/login.component.ts","/home/denniskali/Desktop/ecommercewebb/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth/auth.service';\nimport { UserstorageService } from '../services/auth/storage/userstorage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm!: FormGroup;\n  hidePassword = true; // by default the password should be hidden\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: [null, [Validators.required]],\n      password: [null, [Validators.required]],\n    });\n  }\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n\n  onSubmit(): void {\n    const username = this.loginForm.get('email')!.value;\n    const password = this.loginForm.get('password')!.value;\n\n    this.authService.login(username, password).subscribe(\n      (res) => {\n        if (UserstorageService.isAdminLoggedIn()) {\n          this.router.navigateByUrl('admin/dashboard');\n        } else if (UserstorageService.isCustomerLoggedIn()) {\n          this.router.navigateByUrl('customer/dashboard');\n        }\n      },\n      (error) => {\n        this.snackBar.open('Bad credentials', 'ERROR', { duration: 5000 });\n      }\n    );\n  }\n}\n","<div class=\"container\">\n    <div class=\"welcome-message\">\n    <h1><span>ShopSasa!</span> <p></p>shop at the comfort <p></p>of your home</h1>\n  </div>\n    <mat-card>\n        <mat-card-title>Login</mat-card-title>\n        <mat-card-content>\n            <form [formGroup]=\"loginForm\">\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>E-mail</mat-label>\n                    <input matInput formControlName=\"email\" placeholder=\"Email\" required>\n                    <mat-error *ngIf=\"loginForm.get('email').invalid && loginForm.get('email').touched\">\n                        Please enter a valid E-mail address\n                    </mat-error>\n                </mat-form-field>\n\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Password</mat-label>\n                    <input matInput  type=\"{{ hidePassword ? 'password' : 'text' }}\"formControlName=\"password\" placeholder=\"Password\" required>\n\n                    <button mat-icon-button matSuffix (click)=\"togglePasswordVisibility()\">\n                        <mat-icon>{{hidePassword ? 'visibility_off' : 'visibility' }} </mat-icon>\n                    </button> \n\n                    <mat-error *ngIf=\"loginForm.get('password').invalid && loginForm.get('password').touched\">\n                        Please enter a valid password\n                    </mat-error>\n                </mat-form-field>\n\n                <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"loginForm.invalid\"  \n                (click)=\"onSubmit()\">Login</button>\n            </form>\n\n        </mat-card-content>\n\n        <mat-card-actions>\n            <button mat-button color=\"warn\" routerLink=\"/signup\">Don't have an account?  <span style=\"color: blue;\"> Sign up here!</span> </button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}