{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"../../service/admin.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"@angular/material/icon\";\nfunction UpdateProductComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 15);\n    i0.ɵɵelement(2, \"img\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r0.imagePreview, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction UpdateProductComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 17);\n    i0.ɵɵelement(2, \"img\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r1.existingImage, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction UpdateProductComponent_mat_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", category_r7.name, \" \");\n  }\n}\nfunction UpdateProductComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This input is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This input is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_mat_error_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This input is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_mat_error_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This input is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UpdateProductComponent {\n  constructor(fb, router, snackBar, adminService, activatedroute) {\n    this.fb = fb;\n    this.router = router;\n    this.snackBar = snackBar;\n    this.adminService = adminService;\n    this.activatedroute = activatedroute;\n    this.productId = this.activatedroute.snapshot.params['productId'];\n    this.listOfCategories = []; // Variable to store list of category from the backend\n    this.existingImage = null;\n    //variable to check if the user updated the image or not\n    this.imgChanged = false;\n  }\n  ngOnInit() {\n    this.productForm = this.fb.group({\n      categoryId: [null, [Validators.required]],\n      name: [null, [Validators.required]],\n      price: [null, [Validators.required]],\n      description: [null, [Validators.required]]\n    });\n    this.getAllCategories();\n    this.getProductbyId();\n  }\n  getAllCategories() {\n    this.adminService.getAllCategories().subscribe(res => {\n      this.listOfCategories = res; // Assuming that the response directly provides an array of categories\n    });\n  }\n\n  getProductbyId() {\n    this.adminService.getProductById(this.productId).subscribe(res => {\n      this.productForm.patchValue(res);\n      this.existingImage = 'data:image/jpeg;base64,' + res.byteImg;\n    });\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n    this.previewImage();\n    this.imgChanged = true;\n    this.existingImage = null;\n  }\n  previewImage() {\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result;\n    };\n    reader.readAsDataURL(this.selectedFile);\n  }\n  updateProduct() {\n    if (this.productForm.valid) {\n      const formData = new FormData();\n      if (this.imgChanged && this.selectedFile) {\n        formData.append('img', this.selectedFile);\n      }\n      formData.append('categoryId', this.productForm.get('categoryId').value);\n      formData.append('name', this.productForm.get('name').value);\n      formData.append('description', this.productForm.get('description').value);\n      formData.append('price', this.productForm.get('price').value);\n      this.adminService.updateProduct(this.productId, formData).subscribe(res => {\n        if (res.id != null) {\n          this.snackBar.open('Product updated successfully!', 'Close', {\n            duration: 5000\n          });\n          this.router.navigateByUrl('/admin/dashboard');\n        } else {\n          this.snackBar.open(res.message, 'ERROR', {\n            duration: 5000\n          });\n        }\n      }, error => {\n        console.error('Error adding product:', error); // Log any errors to the console\n        this.snackBar.open('Error adding product!', 'ERROR', {\n          duration: 5000\n        });\n      });\n    } else {\n      for (const i in this.productForm.controls) {\n        if (this.productForm.controls.hasOwnProperty(i)) {\n          this.productForm.controls[i].markAsDirty();\n          this.productForm.controls[i].updateValueAndValidity();\n        }\n      }\n    }\n  }\n  static #_ = this.ɵfac = function UpdateProductComponent_Factory(t) {\n    return new (t || UpdateProductComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.AdminService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateProductComponent,\n    selectors: [[\"app-update-product\"]],\n    decls: 37,\n    vars: 8,\n    consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"file-upload-container\"], [1, \"file-upload-label\"], [\"type\", \"file\", \"id\", \"fileInput\", \"hidden\", \"\", 3, \"change\"], [\"class\", \"image-preview\", 4, \"ngIf\"], [\"appearance\", \"outline\", 1, \"form-field\"], [\"formControlName\", \"categoryId\", \"name\", \"categoryId\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"type\", \"number\", \"placeholder\", \"Price\", \"formControlName\", \"price\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"formControlName\", \"description\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [1, \"image-preview\"], [1, \"circle-image\"], [\"alt\", \"Selected Image\", 1, \"preview-image\", 3, \"src\"], [1, \"circleImage\"], [\"alt\", \"Exising image\", 1, \"preview-image\", 3, \"src\"], [3, \"value\"]],\n    template: function UpdateProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Update Product\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateProductComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.updateProduct();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3)(6, \"span\");\n        i0.ɵɵtext(7, \"Select a file\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 4);\n        i0.ɵɵlistener(\"change\", function UpdateProductComponent_Template_input_change_8_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-icon\");\n        i0.ɵɵtext(10, \"attach_file\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(11, UpdateProductComponent_div_11_Template, 3, 1, \"div\", 5);\n        i0.ɵɵtemplate(12, UpdateProductComponent_div_12_Template, 3, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 6)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Select a Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-select\", 7);\n        i0.ɵɵtemplate(17, UpdateProductComponent_mat_option_17_Template, 2, 2, \"mat-option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, UpdateProductComponent_mat_error_18_Template, 2, 0, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-form-field\", 6)(20, \"mat-label\");\n        i0.ɵɵtext(21, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 10);\n        i0.ɵɵtemplate(23, UpdateProductComponent_mat_error_23_Template, 2, 0, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"mat-form-field\", 6)(25, \"mat-label\");\n        i0.ɵɵtext(26, \"Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 11);\n        i0.ɵɵtemplate(28, UpdateProductComponent_mat_error_28_Template, 2, 0, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"mat-form-field\", 6)(30, \"mat-label\");\n        i0.ɵɵtext(31, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"textarea\", 12);\n        i0.ɵɵtext(33, \"  \\n            \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(34, UpdateProductComponent_mat_error_34_Template, 2, 0, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"button\", 13);\n        i0.ɵɵtext(36, \"Update Product\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        let tmp_4_0;\n        let tmp_5_0;\n        let tmp_6_0;\n        let tmp_7_0;\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedFile);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.existingImage);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listOfCategories);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.productForm.get(\"categoryId\")) == null ? null : tmp_4_0.hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.productForm.get(\"name\")) == null ? null : tmp_5_0.hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.productForm.get(\"price\")) == null ? null : tmp_6_0.hasError(\"required\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", (tmp_7_0 = ctx.productForm.get(\"description\")) == null ? null : tmp_7_0.hasError(\"required\"));\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.MatButton, i7.MatFormField, i7.MatLabel, i7.MatError, i8.MatInput, i9.MatSelect, i10.MatOption, i11.MatIcon],\n    styles: [\".container[_ngcontent-%COMP%] {\\n  max-width: 600px;\\n  margin: 0 auto;\\n  padding: 20px;\\n}\\n.container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 20px;\\n  color: #3f51b5;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .file-upload-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin-bottom: 20px;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .file-upload-container[_ngcontent-%COMP%]   .file-upload-label[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 12px 24px;\\n  background-color: #3f51b5;\\n  color: white;\\n  cursor: pointer;\\n  border-radius: 4px;\\n  transition: background-color 0.3s;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .file-upload-container[_ngcontent-%COMP%]   .file-upload-label[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  margin-right: 8px;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .file-upload-container[_ngcontent-%COMP%]   .file-upload-label[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .image-preview[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 16px;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .image-preview[_ngcontent-%COMP%]   .circle-image[_ngcontent-%COMP%] {\\n  width: 150px;\\n  height: 150px;\\n  border-radius: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  background-color: lightgray;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .image-preview[_ngcontent-%COMP%]   .circle-image[_ngcontent-%COMP%]   .preview-image[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  object-fit: cover;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  align-self: center;\\n  margin-top: 16px;\\n}\\n\\n@media (max-width: 600px) {\\n  .container[_ngcontent-%COMP%] {\\n    padding: 10px;\\n  }\\n  .container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\n    margin-bottom: 10px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4vY29tcG9uZW50cy91cGRhdGUtcHJvZHVjdC91cGRhdGUtcHJvZHVjdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLGFBQUE7QUFDSjtBQUNJO0VBQ0ksa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7QUFDUjtBQUVJO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0FBQVI7QUFFUTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7QUFBWjtBQUVZO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxrQkFBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLGlDQUFBO0FBQWhCO0FBRWdCO0VBQ0ksaUJBQUE7QUFBcEI7QUFHZ0I7RUFDSSxlQUFBO0FBRHBCO0FBTVE7RUFDSSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxnQkFBQTtBQUpaO0FBTVk7RUFDSSxZQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLDJCQUFBO0VBQ0Esd0NBQUE7QUFKaEI7QUFNZ0I7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0FBSnBCO0FBVVE7RUFDSSxnQkFBQTtBQVJaO0FBV1E7RUFDSSxrQkFBQTtFQUNBLGdCQUFBO0FBVFo7O0FBY0E7RUFDSTtJQUNJLGFBQUE7RUFYTjtFQWNVO0lBQ0ksbUJBQUE7RUFaZDtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lcntcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmc6IDIwcHg7XG5cbiAgICBoMntcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgICBjb2xvcjogIzNmNTFiNTtcbiAgICB9XG5cbiAgICBmb3Jte1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgICAgIC5maWxlLXVwbG9hZC1jb250YWluZXJ7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuXG4gICAgICAgICAgICAuZmlsZS11cGxvYWQtbGFiZWwge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMnB4IDI0cHg7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzNmNTFiNTtcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7XG5cbiAgICAgICAgICAgICAgICBzcGFue1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBtYXQtaWNvbntcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC5pbWFnZS1wcmV2aWV3e1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogMTZweDtcblxuICAgICAgICAgICAgLmNpcmNsZS1pbWFnZXtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTUwcHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxNTBweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcbiAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuXG4gICAgICAgICAgICAgICAgLnByZXZpZXctaW1hZ2V7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgbWF0LWZvcm0tZmllbGR7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgYnV0dG9ue1xuICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogMTZweDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KXtcbiAgICAuY29udGFpbmVye1xuICAgICAgICBwYWRkaW5nOiAxMHB4O1xuXG4gICAgICAgIGZvcm17XG4gICAgICAgICAgICBtYXQtZm9ybS1maWVsZHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;;;;;;;ICaxDC,+BAAgD;IAE3CA,0BAAqE;IAEzEA,iBAAM;;;;IAFGA,eAAoB;IAApBA,2DAAoB;;;;;IAMjCA,+BAAiD;IAEzCA,0BAAqE;IACzEA,iBAAM;;;;IADGA,eAAqB;IAArBA,4DAAqB;;;;;IAa1BA,sCAA4E;IAAAA,YACxE;IACJA,iBAAa;;;;IAFyCA,sCAAqB;IAACA,eACxE;IADwEA,gDACxE;;;;;IAIRA,iCAAuE;IAAAA,wCACvE;IAAAA,iBAAY;;;;;IAWZA,iCAAiE;IAAAA,wCACjE;IAAAA,iBAAY;;;;;IAQZA,iCAAkE;IAAAA,wCAClE;IAAAA,iBAAY;;;;;IASZA,iCAAwE;IAAAA,wCACxE;IAAAA,iBAAY;;;AD/DxB,OAAM,MAAOC,sBAAsB;EAcjCC,YACUC,EAAe,EACfC,MAAc,EACdC,QAAqB,EACrBC,YAA0B,EAC1BC,cAA6B;IAJ7B,OAAE,GAAFJ,EAAE;IACF,WAAM,GAANC,MAAM;IACN,aAAQ,GAARC,QAAQ;IACR,iBAAY,GAAZC,YAAY;IACZ,mBAAc,GAAdC,cAAc;IAjBxB,cAAS,GAAG,IAAI,CAACA,cAAc,CAACC,QAAQ,CAACC,MAAM,CAAC,WAAW,CAAC;IAG5D,qBAAgB,GAAU,EAAE,CAAC,CAAC;IAI9B,kBAAa,GAAe,IAAI;IAEhC;IACA,eAAU,GAAE,KAAK;EAQd;EAEHC,QAAQ;IACN,IAAI,CAACC,WAAW,GAAG,IAAI,CAACR,EAAE,CAACS,KAAK,CAAC;MAC/BC,UAAU,EAAE,CAAC,IAAI,EAAE,CAACd,UAAU,CAACe,QAAQ,CAAC,CAAC;MACzCC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAChB,UAAU,CAACe,QAAQ,CAAC,CAAC;MACnCE,KAAK,EAAE,CAAC,IAAI,EAAE,CAACjB,UAAU,CAACe,QAAQ,CAAC,CAAC;MACpCG,WAAW,EAAE,CAAC,IAAI,EAAE,CAAClB,UAAU,CAACe,QAAQ,CAAC;KAC1C,CAAC;IAEF,IAAI,CAACI,gBAAgB,EAAE;IACvB,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAD,gBAAgB;IACd,IAAI,CAACZ,YAAY,CAACY,gBAAgB,EAAE,CAACE,SAAS,CAC5CC,GAAG,IAAG;MACJ,IAAI,CAACC,gBAAgB,GAAGD,GAAG,CAAC,CAAC;IAC/B,CAAC,CAAC;EACJ;;EAEAF,cAAc;IACZ,IAAI,CAACb,YAAY,CAACiB,cAAc,CAAC,IAAI,CAACC,SAAS,CAAC,CAACJ,SAAS,CAACC,GAAG,IAAG;MAC/D,IAAI,CAACV,WAAW,CAACc,UAAU,CAACJ,GAAG,CAAC;MAChC,IAAI,CAACK,aAAa,GAAC,yBAAyB,GAAGL,GAAG,CAACM,OAAO;IAC5D,CAAC,CAAC;EACJ;EAGFC,cAAc,CAACC,KAAU;IACvB,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACzC,IAAI,CAACC,YAAY,EAAE;IACnB,IAAI,CAACC,UAAU,GAAC,IAAI;IAEpB,IAAI,CAACR,aAAa,GAAC,IAAI;EAGzB;EAEAO,YAAY;IACV,MAAME,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,MAAM,GAAG,MAAK;MACnB,IAAI,CAACC,YAAY,GAAGH,MAAM,CAACI,MAAM;IACnC,CAAC;IACDJ,MAAM,CAACK,aAAa,CAAC,IAAI,CAACV,YAAY,CAAC;EACzC;EAEAW,aAAa;IACX,IAAI,IAAI,CAAC9B,WAAW,CAAC+B,KAAK,EAAE;MAC1B,MAAMC,QAAQ,GAAa,IAAIC,QAAQ,EAAE;MAEzC,IAAG,IAAI,CAACV,UAAU,IAAI,IAAI,CAACJ,YAAY,EAAC;QACtCa,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAE,IAAI,CAACf,YAAY,CAAC;;MAG3Ca,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,IAAI,CAAClC,WAAW,CAACmC,GAAG,CAAC,YAAY,CAAC,CAACC,KAAK,CAAC;MACvEJ,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAClC,WAAW,CAACmC,GAAG,CAAC,MAAM,CAAC,CAACC,KAAK,CAAC;MAC3DJ,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAAClC,WAAW,CAACmC,GAAG,CAAC,aAAa,CAAC,CAACC,KAAK,CAAC;MACzEJ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAAClC,WAAW,CAACmC,GAAG,CAAC,OAAO,CAAC,CAACC,KAAK,CAAC;MAE7D,IAAI,CAACzC,YAAY,CAACmC,aAAa,CAAC,IAAI,CAACjB,SAAS,EAACmB,QAAQ,CAAC,CAACvB,SAAS,CAC/DC,GAAG,IAAI;QACN,IAAIA,GAAG,CAAC2B,EAAE,IAAI,IAAI,EAAE;UAClB,IAAI,CAAC3C,QAAQ,CAAC4C,IAAI,CAAC,+BAA+B,EAAE,OAAO,EAAE;YAC3DC,QAAQ,EAAE;WACX,CAAC;UACF,IAAI,CAAC9C,MAAM,CAAC+C,aAAa,CAAC,kBAAkB,CAAC;SAC9C,MAAM;UACL,IAAI,CAAC9C,QAAQ,CAAC4C,IAAI,CAAC5B,GAAG,CAAC+B,OAAO,EAAE,OAAO,EAAE;YACvCF,QAAQ,EAAE;WACX,CAAC;;MAEN,CAAC,EACAG,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAChD,QAAQ,CAAC4C,IAAI,CAAC,uBAAuB,EAAE,OAAO,EAAE;UACnDC,QAAQ,EAAE;SACX,CAAC;MACJ,CAAC,CACF;KACF,MAAM;MACL,KAAK,MAAMK,CAAC,IAAI,IAAI,CAAC5C,WAAW,CAAC6C,QAAQ,EAAE;QACzC,IAAI,IAAI,CAAC7C,WAAW,CAAC6C,QAAQ,CAACC,cAAc,CAACF,CAAC,CAAC,EAAE;UAC/C,IAAI,CAAC5C,WAAW,CAAC6C,QAAQ,CAACD,CAAC,CAAC,CAACG,WAAW,EAAE;UAC1C,IAAI,CAAC/C,WAAW,CAAC6C,QAAQ,CAACD,CAAC,CAAC,CAACI,sBAAsB,EAAE;;;;EAI7D;EAAC;qBA5GU1D,sBAAsB;EAAA;EAAA;UAAtBA,sBAAsB;IAAA2D;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCXnChE,8BAAuB;QACfA,8BAAc;QAAAA,iBAAK;QAEvBA,+BAA6D;QAA7BA;UAAA,OAAYiE,mBAAe;QAAA,EAAC;QAExDjE,8BAAmC;QAErBA,6BAAa;QAAAA,iBAAO;QAC1BA,gCAA2E;QAAzCA;UAAA,OAAUiE,0BAAsB;QAAA,EAAC;QAAnEjE,iBAA2E;QAC3EA,gCAAU;QAAAA,4BAAW;QAAAA,iBAAW;QAKrCA,yEAKG;QAGNA,yEAKM;QAENA,iBAAM;QAKFA,0CAAwD;QAC7CA,kCAAiB;QAAAA,iBAAY;QACxCA,sCAA2D;QACvDA,uFAEa;QACjBA,iBAAa;QAEbA,qFACY;QAChBA,iBAAiB;QAMjBA,0CAAwD;QACzCA,qBAAI;QAAAA,iBAAY;QAC3BA,6BAAuE;QAEvEA,qFACY;QAChBA,iBAAiB;QAGjBA,0CAAwD;QACzCA,sBAAK;QAAAA,iBAAY;QAC5BA,6BAA2E;QAE3EA,qFACY;QAChBA,iBAAiB;QAGjBA,0CAAwD;QACzCA,4BAAW;QAAAA,iBAAY;QAClCA,qCAA2E;QAC3EA;QAAAA,iBAAW;QAEXA,qFACY;QAChBA,iBAAiB;QAEjBA,mCAAwD;QAAAA,+BAAc;QAAAA,iBAAS;;;;;;;QA1E7EA,eAAyB;QAAzBA,2CAAyB;QAWlBA,eAAkB;QAAlBA,uCAAkB;QAQrBA,eAAmB;QAAnBA,wCAAmB;QAegBA,eAAmB;QAAnBA,8CAAmB;QAK5CA,eAAyD;QAAzDA,kHAAyD;QAYzDA,eAAmD;QAAnDA,4GAAmD;QASnDA,eAAoD;QAApDA,6GAAoD;QAUpDA,eAA0D;QAA1DA,mHAA0D","names":["Validators","i0","UpdateProductComponent","constructor","fb","router","snackBar","adminService","activatedroute","snapshot","params","ngOnInit","productForm","group","categoryId","required","name","price","description","getAllCategories","getProductbyId","subscribe","res","listOfCategories","getProductById","productId","patchValue","existingImage","byteImg","onFileSelected","event","selectedFile","target","files","previewImage","imgChanged","reader","FileReader","onload","imagePreview","result","readAsDataURL","updateProduct","valid","formData","FormData","append","get","value","id","open","duration","navigateByUrl","message","error","console","i","controls","hasOwnProperty","markAsDirty","updateValueAndValidity","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/denniskali/Desktop/ecommercewebb/src/app/admin/components/update-product/update-product.component.ts","/home/denniskali/Desktop/ecommercewebb/src/app/admin/components/update-product/update-product.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AdminService } from '../../service/admin.service';\n\n@Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.component.html',\n  styleUrls: ['./update-product.component.scss']\n})\nexport class UpdateProductComponent {\n\n  productId = this.activatedroute.snapshot.params['productId'];\n\n  productForm: FormGroup;  // Variable for productForm\n  listOfCategories: any[] = []; // Variable to store list of category from the backend\n  selectedFile: File | null;   // Storing the selected file\n  imagePreview: string | ArrayBuffer | null;\n\n  existingImage:string | null=null;\n\n  //variable to check if the user updated the image or not\n  imgChanged =false;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private adminService: AdminService,\n    private activatedroute:ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.productForm = this.fb.group({\n      categoryId: [null, [Validators.required]],\n      name: [null, [Validators.required]],\n      price: [null, [Validators.required]],\n      description: [null, [Validators.required]],\n    });\n\n    this.getAllCategories();\n    this.getProductbyId(); \n  }\n\n  getAllCategories() { \n    this.adminService.getAllCategories().subscribe(\n      res => {\n        this.listOfCategories = res; // Assuming that the response directly provides an array of categories\n      })\n    }\n\n    getProductbyId(){\n      this.adminService.getProductById(this.productId).subscribe(res =>{\n        this.productForm.patchValue(res);\n        this.existingImage='data:image/jpeg;base64,' + res.byteImg;\n      })\n    }\n   \n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n    this.previewImage();\n    this.imgChanged=true;\n\n    this.existingImage=null;\n\n\n  }\n\n  previewImage() {\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result;\n    };\n    reader.readAsDataURL(this.selectedFile);\n  }\n\n  updateProduct(): void {\n    if (this.productForm.valid) {\n      const formData: FormData = new FormData();\n\n      if(this.imgChanged && this.selectedFile){\n        formData.append('img', this.selectedFile);\n      }\n\n      formData.append('categoryId', this.productForm.get('categoryId').value);\n      formData.append('name', this.productForm.get('name').value);\n      formData.append('description', this.productForm.get('description').value);\n      formData.append('price', this.productForm.get('price').value);\n\n      this.adminService.updateProduct(this.productId,formData).subscribe(\n        (res) => {\n          if (res.id != null) {\n            this.snackBar.open('Product updated successfully!', 'Close', {\n              duration: 5000\n            });\n            this.router.navigateByUrl('/admin/dashboard');\n          } else {\n            this.snackBar.open(res.message, 'ERROR', {\n              duration: 5000\n            });\n          }\n        },\n        (error) => {\n          console.error('Error adding product:', error); // Log any errors to the console\n          this.snackBar.open('Error adding product!', 'ERROR', {\n            duration: 5000\n          });\n        }\n      );\n    } else {\n      for (const i in this.productForm.controls) {\n        if (this.productForm.controls.hasOwnProperty(i)) {\n          this.productForm.controls[i].markAsDirty();\n          this.productForm.controls[i].updateValueAndValidity();\n        }\n      }\n    }\n  }\n}\n","<div class=\"container\">\n    <h2>Update Product</h2>\n\n    <form [formGroup]=\"productForm\" (ngSubmit)=\"updateProduct()\">\n\n        <div class=\"file-upload-container\">\n            <label class=\"file-upload-label\">\n                <span>Select a file</span>\n                <input type=\"file\" id=\"fileInput\" (change)=\"onFileSelected($event)\" hidden>\n                <mat-icon>attach_file</mat-icon>\n\n            </label>\n\n           <!--showing the image preview-->\n           <div *ngIf=\"selectedFile\" class=\"image-preview\">\n            <div class=\"circle-image\">\n                <img [src]=\"imagePreview\" alt=\"Selected Image\" class=\"preview-image\">\n\n            </div>\n        </div>\n\n        <!--showing the existing image-->\n        <div *ngIf=\"existingImage\" class=\"image-preview\">\n            <div class=\"circleImage\">\n                <img [src]=\"existingImage\" alt=\"Exising image\" class=\"preview-image\">\n            </div>\n\n        </div>\n\n        </div>\n\n        <!--\n        getting input for the category -->\n        \n            <mat-form-field appearance=\"outline\" class=\"form-field\">\n            <mat-label>Select a Category</mat-label>\n            <mat-select formControlName=\"categoryId\" name=\"categoryId\">\n                <mat-option *ngFor=\"let category of listOfCategories\" [value]=\"category.id\">{{category.name}}\n                    <!--this for loop displays all categories-->\n                </mat-option>\n            </mat-select>\n\n            <mat-error *ngIf=\"productForm.get('categoryId')?.hasError('required')\">This input is required!\n            </mat-error>\n        </mat-form-field>\n        \n         \n    \n\n        <!--getting the name of the product from the user-->\n        <mat-form-field appearance=\"outline\" class=\"form-field\">\n            <mat-label>Name</mat-label>\n            <input matInput type=\"text\" placeholder=\"Name\" formControlName=\"name\"/>\n\n            <mat-error *ngIf=\"productForm.get('name')?.hasError('required')\">This input is required!\n            </mat-error>\n        </mat-form-field>\n\n        <!--getting the price of the product from the user-->\n        <mat-form-field appearance=\"outline\" class=\"form-field\">\n            <mat-label>Price</mat-label>\n            <input matInput type=\"number\" placeholder=\"Price\" formControlName=\"price\"/>\n\n            <mat-error *ngIf=\"productForm.get('price')?.hasError('required')\">This input is required!\n            </mat-error>\n        </mat-form-field>\n\n        <!--getting description of the product from the user-->\n        <mat-form-field appearance=\"outline\" class=\"form-field\">\n            <mat-label>Description</mat-label>\n            <textarea matInput placeholder=\"Description\" formControlName=\"description\">  \n            </textarea>\n\n            <mat-error *ngIf=\"productForm.get('description')?.hasError('required')\">This input is required!\n            </mat-error>            \n        </mat-form-field>\n\n        <button mat-raised-button color=\"primary\" type=\"submit\">Update Product</button>\n\n\n\n\n    </form>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}