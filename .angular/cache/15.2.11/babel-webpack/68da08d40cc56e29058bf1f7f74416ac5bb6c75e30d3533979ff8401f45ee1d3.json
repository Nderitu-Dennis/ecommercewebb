{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"../../service/admin.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"@angular/material/icon\";\nfunction PostProductComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 15);\n    i0.ɵɵelement(2, \"img\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r0.imagePreview, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction PostProductComponent_mat_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r6.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", category_r6.name, \" \");\n  }\n}\nfunction PostProductComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This input is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostProductComponent_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This input is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostProductComponent_mat_error_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This input is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostProductComponent_mat_error_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This input is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class PostProductComponent {\n  constructor(fb, router, snackBar, adminService) {\n    this.fb = fb;\n    this.router = router;\n    this.snackBar = snackBar;\n    this.adminService = adminService;\n    this.listOfCategories = []; // Variable to store list of category from the backend\n  }\n\n  ngOnInit() {\n    this.productForm = this.fb.group({\n      categoryId: [null, [Validators.required]],\n      name: [null, [Validators.required]],\n      price: [null, [Validators.required]],\n      description: [null, [Validators.required]]\n    });\n    this.getAllCategories(); //backend API to call all categories and show in the dropdown\n  }\n\n  getAllCategories() {\n    this.adminService.getAllCategories().subscribe(res => {\n      this.listOfCategories = res; // Assuming that the response directly provides an array of categories\n    });\n  }\n\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0]; //calling the first image\n    this.previewImage();\n  }\n  previewImage() {\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result;\n    };\n    reader.readAsDataURL(this.selectedFile);\n  }\n  addProduct() {\n    if (this.productForm.valid) {\n      const formData = new FormData();\n      formData.append('img', this.selectedFile);\n      formData.append('categoryId', this.productForm.get('categoryId').value);\n      formData.append('name', this.productForm.get('name').value);\n      formData.append('description', this.productForm.get('description').value);\n      formData.append('price', this.productForm.get('price').value);\n      this.adminService.addProduct(formData).subscribe(res => {\n        if (res.id != null) {\n          this.snackBar.open('Product posted successfully!', 'Close', {\n            duration: 5000\n          });\n          this.router.navigateByUrl('/admin/dashboard');\n        } else {\n          this.snackBar.open(res.message, 'ERROR', {\n            duration: 5000\n          });\n        }\n      });\n    } else {\n      for (const i in this.productForm.controls) {\n        //  if (this.productForm.controls.hasOwnProperty(i)) {\n        this.productForm.controls[i].markAsDirty();\n        this.productForm.controls[i].updateValueAndValidity();\n      }\n    }\n  }\n  static #_ = this.ɵfac = function PostProductComponent_Factory(t) {\n    return new (t || PostProductComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.AdminService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PostProductComponent,\n    selectors: [[\"app-post-product\"]],\n    decls: 36,\n    vars: 7,\n    consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"file-upload-container\"], [1, \"file-upload-label\"], [\"type\", \"file\", \"id\", \"fileInput\", \"hidden\", \"\", 3, \"change\"], [\"class\", \"image-preview\", 4, \"ngIf\"], [\"appearance\", \"outline\", 1, \"form-field\"], [\"formControlName\", \"categoryId\", \"name\", \"categoryId\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"type\", \"number\", \"placeholder\", \"Price\", \"formControlName\", \"price\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"formControlName\", \"description\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [1, \"image-preview\"], [1, \"circle-image\"], [\"alt\", \"Selected Image\", 1, \"preview-image\", 3, \"src\"], [3, \"value\"]],\n    template: function PostProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Add Product\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function PostProductComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.addProduct();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3)(6, \"span\");\n        i0.ɵɵtext(7, \"Select a file\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 4);\n        i0.ɵɵlistener(\"change\", function PostProductComponent_Template_input_change_8_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-icon\");\n        i0.ɵɵtext(10, \"attach_file\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(11, PostProductComponent_div_11_Template, 3, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-form-field\", 6)(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Select a Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mat-select\", 7);\n        i0.ɵɵtemplate(16, PostProductComponent_mat_option_16_Template, 2, 2, \"mat-option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, PostProductComponent_mat_error_17_Template, 2, 0, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-form-field\", 6)(19, \"mat-label\");\n        i0.ɵɵtext(20, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 10);\n        i0.ɵɵtemplate(22, PostProductComponent_mat_error_22_Template, 2, 0, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"mat-form-field\", 6)(24, \"mat-label\");\n        i0.ɵɵtext(25, \"Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 11);\n        i0.ɵɵtemplate(27, PostProductComponent_mat_error_27_Template, 2, 0, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"mat-form-field\", 6)(29, \"mat-label\");\n        i0.ɵɵtext(30, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"textarea\", 12);\n        i0.ɵɵtext(32, \"  \\n            \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(33, PostProductComponent_mat_error_33_Template, 2, 0, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"button\", 13);\n        i0.ɵɵtext(35, \"Add Product\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        let tmp_3_0;\n        let tmp_4_0;\n        let tmp_5_0;\n        let tmp_6_0;\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedFile);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listOfCategories);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.productForm.get(\"categoryId\")) == null ? null : tmp_3_0.hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.productForm.get(\"name\")) == null ? null : tmp_4_0.hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.productForm.get(\"price\")) == null ? null : tmp_5_0.hasError(\"required\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.productForm.get(\"description\")) == null ? null : tmp_6_0.hasError(\"required\"));\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.MatButton, i7.MatFormField, i7.MatLabel, i7.MatError, i8.MatInput, i9.MatSelect, i10.MatOption, i11.MatIcon],\n    styles: [\".container[_ngcontent-%COMP%] {\\n  max-width: 600px;\\n  margin: 0 auto;\\n  padding: 20px;\\n}\\n.container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 20px;\\n  color: #3f51b5;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .file-upload-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin-bottom: 20px;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .file-upload-container[_ngcontent-%COMP%]   .file-upload-label[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 12px 24px;\\n  background-color: #3f51b5;\\n  color: white;\\n  cursor: pointer;\\n  border-radius: 4px;\\n  transition: background-color 0.3s;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .file-upload-container[_ngcontent-%COMP%]   .file-upload-label[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  margin-right: 8px;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .file-upload-container[_ngcontent-%COMP%]   .file-upload-label[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .image-preview[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 16px;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .image-preview[_ngcontent-%COMP%]   .circle-image[_ngcontent-%COMP%] {\\n  width: 150px;\\n  height: 150px;\\n  border-radius: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  background-color: lightgray;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .image-preview[_ngcontent-%COMP%]   .circle-image[_ngcontent-%COMP%]   .preview-image[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  object-fit: cover;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  align-self: center;\\n  margin-top: 16px;\\n}\\n\\n@media (max-width: 600px) {\\n  .container[_ngcontent-%COMP%] {\\n    padding: 10px;\\n  }\\n  .container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\n    margin-bottom: 10px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4vY29tcG9uZW50cy9wb3N0LXByb2R1Y3QvcG9zdC1wcm9kdWN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQUE7RUFDQSxjQUFBO0VBQ0EsYUFBQTtBQUNKO0FBQ0k7RUFDSSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsY0FBQTtBQUNSO0FBRUk7RUFDSSxhQUFBO0VBQ0Esc0JBQUE7QUFBUjtBQUVRO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtBQUFaO0FBRVk7RUFDSSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLGtCQUFBO0VBQ0EseUJBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0VBQ0EsaUNBQUE7QUFBaEI7QUFFZ0I7RUFDSSxpQkFBQTtBQUFwQjtBQUdnQjtFQUNJLGVBQUE7QUFEcEI7QUFNUTtFQUNJLGFBQUE7RUFDQSx1QkFBQTtFQUNBLGdCQUFBO0FBSlo7QUFNWTtFQUNJLFlBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsMkJBQUE7RUFDQSx3Q0FBQTtBQUpoQjtBQU1nQjtFQUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7QUFKcEI7QUFVUTtFQUNJLGdCQUFBO0FBUlo7QUFXUTtFQUNJLGtCQUFBO0VBQ0EsZ0JBQUE7QUFUWjs7QUFjQTtFQUNJO0lBQ0ksYUFBQTtFQVhOO0VBY1U7SUFDSSxtQkFBQTtFQVpkO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xuICAgIG1heC13aWR0aDogNjAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcGFkZGluZzogMjBweDtcblxuICAgIGgye1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICAgIGNvbG9yOiAjM2Y1MWI1O1xuICAgIH1cblxuICAgIGZvcm17XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cbiAgICAgICAgLmZpbGUtdXBsb2FkLWNvbnRhaW5lcntcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG5cbiAgICAgICAgICAgIC5maWxlLXVwbG9hZC1sYWJlbCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEycHggMjRweDtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Y1MWI1O1xuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcztcblxuICAgICAgICAgICAgICAgIHNwYW57XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogOHB4O1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIG1hdC1pY29ue1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLmltYWdlLXByZXZpZXd7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxNnB4O1xuXG4gICAgICAgICAgICAuY2lyY2xlLWltYWdle1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxNTBweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDE1MHB4O1xuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xuICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMik7XG5cbiAgICAgICAgICAgICAgICAucHJldmlldy1pbWFnZXtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBtYXQtZm9ybS1maWVsZHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgICAgIH1cblxuICAgICAgICBidXR0b257XG4gICAgICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxNnB4O1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjAwcHgpe1xuICAgIC5jb250YWluZXJ7XG4gICAgICAgIHBhZGRpbmc6IDEwcHg7XG5cbiAgICAgICAgZm9ybXtcbiAgICAgICAgICAgIG1hdC1mb3JtLWZpZWxke1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;;;;;;;ICaxDC,+BAAgD;IAE3CA,0BAAqE;IAEzEA,iBAAM;;;;IAFGA,eAAoB;IAApBA,2DAAoB;;;;;IAYzBA,sCAA4E;IAAAA,YACxE;IACJA,iBAAa;;;;IAFyCA,sCAAqB;IAACA,eACxE;IADwEA,gDACxE;;;;;IAIRA,iCAAuE;IAAAA,wCACvE;IAAAA,iBAAY;;;;;IAWZA,iCAAiE;IAAAA,wCACjE;IAAAA,iBAAY;;;;;IAQZA,iCAAkE;IAAAA,wCAClE;IAAAA,iBAAY;;;;;IASZA,iCAAwE;IAAAA,wCACxE;IAAAA,iBAAY;;;ADtDxB,OAAM,MAAOC,oBAAoB;EAO/BC,YACUC,EAAe,EACfC,MAAc,EACdC,QAAqB,EACrBC,YAA0B;IAH1B,OAAE,GAAFH,EAAE;IACF,WAAM,GAANC,MAAM;IACN,aAAQ,GAARC,QAAQ;IACR,iBAAY,GAAZC,YAAY;IARtB,qBAAgB,GAAU,EAAE,CAAC,CAAC;EAS3B;;EAEHC,QAAQ;IACN,IAAI,CAACC,WAAW,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAC/BC,UAAU,EAAE,CAAC,IAAI,EAAE,CAACX,UAAU,CAACY,QAAQ,CAAC,CAAC;MACzCC,IAAI,EAAE,CAAC,IAAI,EAAE,CAACb,UAAU,CAACY,QAAQ,CAAC,CAAC;MACnCE,KAAK,EAAE,CAAC,IAAI,EAAE,CAACd,UAAU,CAACY,QAAQ,CAAC,CAAC;MACpCG,WAAW,EAAE,CAAC,IAAI,EAAE,CAACf,UAAU,CAACY,QAAQ,CAAC;KAC1C,CAAC;IAEF,IAAI,CAACI,gBAAgB,EAAE,CAAC,CAAE;EAC5B;;EAEAA,gBAAgB;IACd,IAAI,CAACT,YAAY,CAACS,gBAAgB,EAAE,CAACC,SAAS,CAC3CC,GAAG,IAAI;MACN,IAAI,CAACC,gBAAgB,GAAGD,GAAG,CAAC,CAAC;IAC/B,CAAC,CAIF;EACH;;EAEAE,cAAc,CAACC,KAAU;IACvB,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE;IAC5C,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAY;IACV,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,MAAM,GAAG,MAAK;MACnB,IAAI,CAACC,YAAY,GAAGH,MAAM,CAACI,MAAM;IACnC,CAAC;IACDJ,MAAM,CAACK,aAAa,CAAC,IAAI,CAACT,YAAY,CAAC;EACzC;EAEAU,UAAU;IACR,IAAI,IAAI,CAACvB,WAAW,CAACwB,KAAK,EAAE;MAC1B,MAAMC,QAAQ,GAAa,IAAIC,QAAQ,EAAE;MACzCD,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAE,IAAI,CAACd,YAAY,CAAC;MACzCY,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC3B,WAAW,CAAC4B,GAAG,CAAC,YAAY,CAAC,CAACC,KAAK,CAAC;MACvEJ,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC3B,WAAW,CAAC4B,GAAG,CAAC,MAAM,CAAC,CAACC,KAAK,CAAC;MAC3DJ,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC3B,WAAW,CAAC4B,GAAG,CAAC,aAAa,CAAC,CAACC,KAAK,CAAC;MACzEJ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC3B,WAAW,CAAC4B,GAAG,CAAC,OAAO,CAAC,CAACC,KAAK,CAAC;MAE7D,IAAI,CAAC/B,YAAY,CAACyB,UAAU,CAACE,QAAQ,CAAC,CAACjB,SAAS,CAC7CC,GAAG,IAAI;QACN,IAAIA,GAAG,CAACqB,EAAE,IAAI,IAAI,EAAE;UAClB,IAAI,CAACjC,QAAQ,CAACkC,IAAI,CAAC,8BAA8B,EAAE,OAAO,EAAE;YAC1DC,QAAQ,EAAE;WACX,CAAC;UACF,IAAI,CAACpC,MAAM,CAACqC,aAAa,CAAC,kBAAkB,CAAC;SAC9C,MAAM;UACL,IAAI,CAACpC,QAAQ,CAACkC,IAAI,CAACtB,GAAG,CAACyB,OAAO,EAAE,OAAO,EAAE;YACvCF,QAAQ,EAAE;WACX,CAAC;;MAEN,CAAC,CAAC;KAEL,MAAM;MACL,KAAK,MAAMG,CAAC,IAAI,IAAI,CAACnC,WAAW,CAACoC,QAAQ,EAAE;QAC3C;QACI,IAAI,CAACpC,WAAW,CAACoC,QAAQ,CAACD,CAAC,CAAC,CAACE,WAAW,EAAE;QAC1C,IAAI,CAACrC,WAAW,CAACoC,QAAQ,CAACD,CAAC,CAAC,CAACG,sBAAsB,EAAE;;;EAG3D;EAAC;qBA/EQ7C,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAA8C;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCXjCnD,8BAAuB;QACfA,2BAAW;QAAAA,iBAAK;QAEpBA,+BAA0D;QAA1BA;UAAA,OAAYoD,gBAAY;QAAA,EAAC;QAErDpD,8BAAmC;QAErBA,6BAAa;QAAAA,iBAAO;QAC1BA,gCAA4E;QAAzCA;UAAA,OAAUoD,0BAAsB;QAAA,EAAC;QAApEpD,iBAA4E;QAC5EA,gCAAU;QAAAA,4BAAW;QAAAA,iBAAW;QAKrCA,uEAKG;QACNA,iBAAM;QAKFA,0CAAwD;QAC7CA,kCAAiB;QAAAA,iBAAY;QACxCA,sCAA2D;QACvDA,qFAEa;QACjBA,iBAAa;QAEbA,mFACY;QAChBA,iBAAiB;QAMjBA,0CAAwD;QACzCA,qBAAI;QAAAA,iBAAY;QAC3BA,6BAAuE;QAEvEA,mFACY;QAChBA,iBAAiB;QAGjBA,0CAAwD;QACzCA,sBAAK;QAAAA,iBAAY;QAC5BA,6BAA2E;QAE3EA,mFACY;QAChBA,iBAAiB;QAGjBA,0CAAwD;QACzCA,4BAAW;QAAAA,iBAAY;QAClCA,qCAA2E;QAC3EA;QAAAA,iBAAW;QAEXA,mFACY;QAChBA,iBAAiB;QAEjBA,mCAAwD;QAAAA,4BAAW;QAAAA,iBAAS;;;;;;;QAjE1EA,eAAyB;QAAzBA,2CAAyB;QAWlBA,eAAkB;QAAlBA,uCAAkB;QAccA,eAAmB;QAAnBA,8CAAmB;QAK5CA,eAAyD;QAAzDA,kHAAyD;QAYzDA,eAAmD;QAAnDA,4GAAmD;QASnDA,eAAoD;QAApDA,6GAAoD;QAUpDA,eAA0D;QAA1DA,mHAA0D","names":["Validators","i0","PostProductComponent","constructor","fb","router","snackBar","adminService","ngOnInit","productForm","group","categoryId","required","name","price","description","getAllCategories","subscribe","res","listOfCategories","onFileSelected","event","selectedFile","target","files","previewImage","reader","FileReader","onload","imagePreview","result","readAsDataURL","addProduct","valid","formData","FormData","append","get","value","id","open","duration","navigateByUrl","message","i","controls","markAsDirty","updateValueAndValidity","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/denniskali/Desktop/ecommercewebb/src/app/admin/components/post-product/post-product.component.ts","/home/denniskali/Desktop/ecommercewebb/src/app/admin/components/post-product/post-product.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AdminService } from '../../service/admin.service';\n\n@Component({\n  selector: 'app-post-product',\n  templateUrl: './post-product.component.html',\n  styleUrls: ['./post-product.component.scss']\n})\nexport class PostProductComponent implements OnInit {\n\n  productForm: FormGroup;  // Variable for productForm\n  listOfCategories: any[] = []; // Variable to store list of category from the backend\n  selectedFile: File | null;   // Storing the selected file\n  imagePreview: string | ArrayBuffer | null;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private adminService: AdminService\n  ) {}\n\n  ngOnInit(): void {\n    this.productForm = this.fb.group({\n      categoryId: [null, [Validators.required]],\n      name: [null, [Validators.required]],\n      price: [null, [Validators.required]],\n      description: [null, [Validators.required]],\n    });\n\n    this.getAllCategories();  //backend API to call all categories and show in the dropdown\n  }\n\n  getAllCategories() {\n    this.adminService.getAllCategories().subscribe(\n      (res) => {\n        this.listOfCategories = res; // Assuming that the response directly provides an array of categories\n      },\n      //(error) => {\n     //   console.error('Error fetching categories:', error); // Log any errors to the console\n    //  }\n    );\n  }\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];  //calling the first image\n    this.previewImage();\n  }\n\n  previewImage() {\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result;\n    }; \n    reader.readAsDataURL(this.selectedFile);\n  }\n\n  addProduct(): void {\n    if (this.productForm.valid) {\n      const formData: FormData = new FormData();\n      formData.append('img', this.selectedFile);      \n      formData.append('categoryId', this.productForm.get('categoryId').value);\n      formData.append('name', this.productForm.get('name').value);\n      formData.append('description', this.productForm.get('description').value);\n      formData.append('price', this.productForm.get('price').value);\n\n      this.adminService.addProduct(formData).subscribe(\n        (res) => {\n          if (res.id != null) {\n            this.snackBar.open('Product posted successfully!', 'Close', {\n              duration: 5000\n            });\n            this.router.navigateByUrl('/admin/dashboard');\n          } else {\n            this.snackBar.open(res.message, 'ERROR', {\n              duration: 5000\n            });\n          }\n        })\n        \n    } else {\n      for (const i in this.productForm.controls) {\n      //  if (this.productForm.controls.hasOwnProperty(i)) {\n          this.productForm.controls[i].markAsDirty();\n          this.productForm.controls[i].updateValueAndValidity();\n        }\n      }\n    }\n  }\n\n","<div class=\"container\">\n    <h2>Add Product</h2>\n\n    <form [formGroup]=\"productForm\" (ngSubmit)=\"addProduct()\">\n\n        <div class=\"file-upload-container\">\n            <label class=\"file-upload-label\">\n                <span>Select a file</span>\n                <input type=\"file\" id=\"fileInput\"  (change)=\"onFileSelected($event)\" hidden>\n                <mat-icon>attach_file</mat-icon>\n\n            </label>\n\n           <!--showing the image preview-->\n           <div *ngIf=\"selectedFile\" class=\"image-preview\">\n            <div class=\"circle-image\">\n                <img [src]=\"imagePreview\" alt=\"Selected Image\" class=\"preview-image\">\n\n            </div>\n        </div>\n        </div>\n\n        <!--\n        getting input for the category -->\n        \n            <mat-form-field appearance=\"outline\" class=\"form-field\">\n            <mat-label>Select a Category</mat-label>\n            <mat-select formControlName=\"categoryId\" name=\"categoryId\">\n                <mat-option *ngFor=\"let category of listOfCategories\" [value]=\"category.id\">{{category.name}}\n                    <!--this for loop displays all categories-->\n                </mat-option>\n            </mat-select>\n\n            <mat-error *ngIf=\"productForm.get('categoryId')?.hasError('required')\">This input is required!\n            </mat-error>\n        </mat-form-field>\n        \n         \n    \n\n        <!--getting the name of the product from the user-->\n        <mat-form-field appearance=\"outline\" class=\"form-field\">\n            <mat-label>Name</mat-label>\n            <input matInput type=\"text\" placeholder=\"Name\" formControlName=\"name\"/>\n\n            <mat-error *ngIf=\"productForm.get('name')?.hasError('required')\">This input is required!\n            </mat-error>\n        </mat-form-field>\n\n        <!--getting the price of the product from the user-->\n        <mat-form-field appearance=\"outline\" class=\"form-field\">\n            <mat-label>Price</mat-label>\n            <input matInput type=\"number\" placeholder=\"Price\" formControlName=\"price\"/>\n\n            <mat-error *ngIf=\"productForm.get('price')?.hasError('required')\">This input is required!\n            </mat-error>\n        </mat-form-field>\n\n        <!--getting description of the product from the user-->\n        <mat-form-field appearance=\"outline\" class=\"form-field\">\n            <mat-label>Description</mat-label>\n            <textarea matInput placeholder=\"Description\" formControlName=\"description\">  \n            </textarea>\n\n            <mat-error *ngIf=\"productForm.get('description')?.hasError('required')\">This input is required!\n            </mat-error>            \n        </mat-form-field>\n\n        <button mat-raised-button color=\"primary\" type=\"submit\">Add Product</button>\n\n\n\n\n    </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}